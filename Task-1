import express from 'express';
const app = express();
const port = 3000;

app.use(express.json()); // For parsing JSON in request bodies

// Sample in-memory data
let users = [
    { id: 1, name: 'John Doe', age: 25 },
    { id: 2, name: 'Jane Doe', age: 22 },
    
];

// GET all users
app.get('/users', (req, res) => {
    res.json(users);
});

// GET a single user by ID
app.get('/users/:id', (req, res) => {
    const userId = parseInt(req.params.id);
    const user = users.find(u => u.id === userId);
   
    if (user) {
        res.json(user);
    } else {
        res.status(404).json({ message: 'User not found' });
    }
});

// POST a new user
app.post('/users', (req, res) => {
    const newUser = {
        id: users.length + 1,  // Auto-increment ID
        name: req.body.name,
        age: req.body.age
    };
    users.push(newUser);
    res.status(201).json(newUser);
});

// PUT to update an existing user by ID
app.put('/users/:id', (req, res) => {
    const userId = parseInt(req.params.id);
    const userIndex = users.findIndex(u => u.id === userId);
   
    if (userIndex !== -1) {
        users[userIndex] = {
            id: userId,
            name: req.body.name || users[userIndex].name,
            age: req.body.age || users[userIndex].age,
        };
        res.json(users[userIndex]);
    } else {
        res.status(404).json({ message: 'User not found' });
    }
});

// DELETE a user by ID
app.delete('/users/:id', (req, res) => {
    const userId = parseInt(req.params.id);
    users = users.filter(u => u.id !== userId);
   
    res.json({ message: 'User deleted' });
});

// Start the server
app.listen(port, () => {
    console.log(`Server running on http://localhost:${port}`);
});
